ok () {
        this.$refs['formData'].validate(valid => {
          if(!valid) {
            this.$Message.error('书籍信息存在错误');
            return this.changeLoading();
          }
          setTimeout(() => {
            axios.post('http://localhost:8088/manager/addBook', this.formData)
              .then((response) => {
                this.modal = false;
                this.$Message.success('成功添加书籍');
                console.log(response);
                //阻止元素发生默认的行为
                event.preventDefault();
                let formData = new FormData();
                formData.append("file", this.file);
                axios.post('http://localhost:8088/image/upload?ISBN=' + this.formData.ISBN.toString(), formData)
                  .then(function (response) {
                    //alert(response.data);
                    console.log(response);
                    //window.location.reload();

                    this.changeLoading();
                    axios.get('http://localhost:8088/manager/books').then((response) => {
                      this.books = response.data;
                      var i = 0;
                      for (; i < this.books.length; i++) {
                        this.books[i].editting = 0;
                        this.books[i].saving = 0;
                      }
                      this.bookShow = this.books;
                    }).catch((error) => {
                      console.log(error);
                    })

                  }).catch((error) => {
                  console.log(error);
                  this.$Message.error('连接出错，请稍后再试');
                })

                  })
                  .catch(function (error) {
                    alert("上传失败");
                    console.log(error);
                    window.location.reload();
                  });

          }, 1000);
        });
      },


BooksExample booksExample = new BooksExample();
            BooksExample.Criteria criteria = booksExample.createCriteria();
            criteria.andIsbnEqualTo(ISBN);
            List<Books> o = booksMapper.selectByExample(booksExample);
            Path path1 = Paths.get("static/img/goodsList/" + "goodsList-item" + ISBN + file.getOriginalFilename());
            o.get(0).setCover(path1.toString());
            booksMapper.updateByExampleSelective(o.get(0), booksExample);